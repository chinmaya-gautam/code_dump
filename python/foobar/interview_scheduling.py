#!/usr/bin/python

def answer(meetings):
    for j in range(0, len(meetings)):
        for i in range(0, len(meetings)-1):
            if meetings[i][1] > meetings[i+1][1]:
                temp = meetings[i]
                meetings[i] = meetings[i+1]
                meetings[i+1] = temp
    
    if len(meetings) == 1:
        return 1

    meeting_status = [1 for i in range(0, len(meetings))]
    count=0
    finish_time = 0
    num_meetings = len(meetings)
    for i in range(0, num_meetings-1):
        if meeting_status[i] != 0:
            finish_time = meetings[i][1]
        for j in range(i+1, num_meetings):
            if meetings[j][0] < finish_time:
                meeting_status[j] = 0

    print "Non overlapping meetings:"
    for i in range(0, num_meetings):
        if meeting_status[i] == 1:
            count += 1
            print meetings[i] ,
    return count

print answer([[2,3], [4,5],[0,1],[3,5],[1,2]])
print answer([[0,1000000],[42,43],[0,1000000],[42,43]])
print answer([[1,3],[2,5],[4,6],[6,7],[8,11],[5,9],[9,10]])
print answer([[4,5]])
print answer([[906430, 962049], [813627, 924436], [342835, 882482], [970429, 988560], [222251, 998120], [454484, 467526], [31677, 69429], [214577, 217790], [727558, 900992], [893669, 914130], [594439, 962131], [696780, 992893], [575498, 662901], [249898, 584680], [493634, 780915], [400989, 537184], [580978, 995378], [799966, 843738], [114035, 523877], [134268, 388678], [830785, 888712], [165418, 438476], [852078, 962048], [164455, 183747], [354205, 650787], [302487, 528673], [170521, 665591], [699803, 939669], [298289, 940565], [577093, 796269], [558204, 599059], [607628, 840985], [823864, 880361], [171608, 890634], [887135, 893813], [691347, 941753], [435358, 529863], [319358, 660764], [869528, 915872], [435859, 868615], [887613, 992442], [843768, 881474], [468254, 724451], [237604, 858710], [687836, 807529], [800182, 907346], [504024, 877115], [875415, 941142], [909318, 911307], [568657, 760184], [986950, 999333], [604360, 969689], [697287, 927571], [506159, 819297], [277036, 746578], [689335, 801615], [988776, 995776], [888114, 922945], [153578, 257392], [468258, 933176], [792747, 967320], [99934, 801624], [55919, 956159], [723181, 752852], [670444, 892434], [219526, 997625], [127014, 644444], [778800, 832134], [934526, 993384], [919843, 961900], [895423, 905619], [513864, 578543], [180342, 791323], [997462, 998068], [709291, 993634], [108407, 307073], [294662, 509559], [461619, 574242], [378652, 389851], [611862, 798860], [352235, 829651], [902158, 974783], [168917, 808219], [696346, 951132], [329592, 520551], [359218, 590919], [986300, 996341], [30714, 336003], [435175, 540326], [646234, 837474], [105247, 686882], [550454, 606072], [85325, 215761], [265617, 370576], [37633, 420357], [684482, 895520], [242536, 246148], [515457, 633998], [274817, 872870], [601440, 758476]])
