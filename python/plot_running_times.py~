#!/usr/bin/python
#plot_running_times.py

import math
import matplotlib.pyplot as plt

##### functions ########

def f1(n):
    return n ** 2.5

def f2(n):
    return math.sqrt(2*n)

def f3(n):
    return (n + 10)

def f4(n):
    return (10 ** n)

def f5(n):
    return (100 ** n)

def f6(n):
    return (n**2 * math.log(n))
def f7(n):
    return (math.log(n)**2)
def f8(n):
    return (4/3 * math.log(n))
def f9(n):
    return (math.log(n * (math.log(n)**3)))
def f10(n):
    return (math.sqrt(math.log(n)))

n = 10

print "n: %d, n^2.5: %5.4f" % (n, f1(n))


######### generate x axis ##########

x_axis = [ i*50 for i in range(1, 11) ]

######### generate f(x) values #########
plot1 = []
plot2 = []
plot3 = []
plot4 = []
plot5 = []
plot6 = []
plot7 = []
plot8 = []
plot9 = []
plot10 = []

for x in x_axis:
    plot1.append(f1(x))
    plot2.append(f2(x))
    plot3.append(f3(x))
    plot4.append(f4(x))
    plot5.append(f5(x))
    plot6.append(f6(x))
    plot7.append(f7(x))
    plot8.append(f8(x))
    plot9.append(f9(x))
    plot10.append(f10(x))

    
############# plot the curve ##############

print x
#plt.plot(x_axis, plot1, "r-", label='red_line')
#plt.plot(x_axis, plot1, "r-", x_axis, plot2, "b-", x_axis, plot3, "g-", x_axis, plot6, "y-")
#plt.legend(handles=['red_line'])
#plt.plot(x_axis, plot3, "r-", x_axis, plot2, "b-")
plt.plot(x_axis,plot3, "mo", x_axis, plot7, "r-", x_axis, plot8, "b-", x_axis, plot9, "g-", x_axis, plot10, "y-")
plt.show()
